{"version":3,"sources":["components/shared/Modal.js"],"names":["Modal","props","backdropRef","createRef","handleBackdropClick","e","current","target","onHandleModal","handleKeyPress","code","message","title","body","button","state","window","addEventListener","this","removeEventListener","className","ref","onClick","type","Component"],"mappings":"sMAGqBA,E,kDAGnB,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IAHRC,YAAcC,sBAEK,EAoBnBC,oBAAsB,SAAAC,GAAM,IAClBC,EAAY,EAAKJ,YAAjBI,QACJA,GAAWD,EAAEE,SAAWD,IAI5BE,EAD0B,EAAKP,MAAvBO,kBAzBS,EA6BnBC,eAAiB,SAAAJ,GACA,WAAXA,EAAEK,OAENF,EAD0B,EAAKP,MAAvBO,kBA/BS,MAGeP,EAAMU,QAA9BC,EAHS,EAGTA,MAAOC,EAHE,EAGFA,KAAMC,EAHJ,EAGIA,OAHJ,OAKjB,EAAKC,MAAQ,CACXH,QACAC,OACAC,UARe,E,gEAajBE,OAAOC,iBAAiB,UAAWC,KAAKT,kB,6CAIxCO,OAAOG,oBAAoB,UAAWD,KAAKT,kB,+BAkBnC,IACAD,EAAkBU,KAAKjB,MAAvBO,cADD,EAEyBU,KAAKH,MAA7BH,EAFD,EAECA,MAAOC,EAFR,EAEQA,KAAMC,EAFd,EAEcA,OACrB,OACE,yBACEM,UAAU,2BACVC,IAAKH,KAAKhB,YACVoB,QAASJ,KAAKd,qBAEd,yBAAKgB,UAAU,SACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,gBAAgBR,GAC9B,yBAAKQ,UAAU,WACf,4BACEG,KAAK,SACLH,UAAU,kBACVE,QAAS,kBAAMd,MAHjB,MAQF,yBAAKY,UAAU,gBACb,uBAAGA,UAAU,eAAeP,IAE9B,yBAAKO,UAAU,gBACb,4BACEG,KAAK,SACLH,UAAU,uBACVE,QAAS,kBAAMd,MAEdM,U,GApEoBU","file":"static/js/Modal.3c65e0a1.chunk.js","sourcesContent":["import React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Modal extends Component {\n  backdropRef = createRef();\n\n  constructor(props) {\n    super(props);\n\n    const { title, body, button } = props.message;\n\n    this.state = {\n      title,\n      body,\n      button,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleBackdropClick = e => {\n    const { current } = this.backdropRef;\n    if (current && e.target !== current) {\n      return;\n    }\n    const { onHandleModal } = this.props;\n    onHandleModal();\n  };\n\n  handleKeyPress = e => {\n    if (e.code !== 'Escape') return;\n    const { onHandleModal } = this.props;\n    onHandleModal();\n  };\n\n  render() {\n    const { onHandleModal } = this.props;\n    const { title, body, button } = this.state;\n    return (\n      <div\n        className=\"backdrop backdrop__modal\"\n        ref={this.backdropRef}\n        onClick={this.handleBackdropClick}\n      >\n        <div className=\"modal\">\n          <div className=\"modal__inner\">\n            <h2 className=\"modal__title\">{title}</h2>\n            <div className=\"spacer\" />\n            <button\n              type=\"button\"\n              className=\"button modal__x\"\n              onClick={() => onHandleModal()}\n            >\n              x\n            </button>\n          </div>\n          <div className=\"modal__inner\">\n            <p className=\"modal__body\">{body}</p>\n          </div>\n          <div className=\"modal__inner\">\n            <button\n              type=\"button\"\n              className=\"button modal__button\"\n              onClick={() => onHandleModal()}\n            >\n              {button}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  onHandleModal: PropTypes.func.isRequired,\n  message: PropTypes.shape({\n    body: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    button: PropTypes.string.isRequired,\n  }).isRequired,\n};\n"],"sourceRoot":""}